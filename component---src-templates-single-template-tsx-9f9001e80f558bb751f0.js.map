{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/SingleTemplate.tsx"],"names":["React","require","useMDXComponents","mdx","useMDXScope","module","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","MDXRenderer","ContentTemplate","data","frontmatter","body","title","date","query"],"mappings":"8uEAAA,IAAMA,EAAQC,EAAd,Q,EACkCA,EAAQ,QAAlCC,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBH,EAAQ,QAAxBG,YAERC,UAAiB,SAAqB,GAKlC,IAJFC,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBR,EAAtB,GACMS,EAAWP,EAFhB,GAKKQ,EAAMZ,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMa,EAAS,GAGbb,MAHa,EAIbG,OAJF,GAQMW,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOR,EAAA,mBAA2BO,WAAYG,GAA9C,M,kCClCF,wGAOMS,EAAclB,EAAQ,QAqBbmB,UAfS,SAAC,GAAmC,QAAjCC,KAEvBlB,IAAOmB,EAFiD,EAEjDA,YAAaC,EAFoC,EAEpCA,KAGtB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQC,MAAK,GAAKF,EAAYE,QAC9B,sBAAKF,EAAYE,OACjB,sBAAKF,EAAYG,MACjB,YAACN,EAAD,KAAcI,KAOb,IAAMG,EAAQ","file":"component---src-templates-single-template-tsx-9f9001e80f558bb751f0.js","sourcesContent":["const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { SinglePageQuery } from 'generated/types/gatsby'\nimport { Layout } from '../components/Layout'\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst MDXRenderer = require('gatsby-plugin-mdx/mdx-renderer')\n\ninterface ContentTemplateProps {\n  readonly data: SinglePageQuery\n}\n\nconst ContentTemplate = ({ data }: ContentTemplateProps) => {\n  const {\n    mdx: { frontmatter, body },\n  } = data\n\n  return (\n    <Layout>\n      <Helmet title={`${frontmatter.title}`} />\n      <h2>{frontmatter.title}</h2>\n      <h3>{frontmatter.date}</h3>\n      <MDXRenderer>{body}</MDXRenderer>\n    </Layout>\n  )\n}\n\nexport default ContentTemplate\n\nexport const query = graphql`\n  query SinglePage($path: String!) {\n    mdx(frontmatter: { draft: { ne: true }, path: { eq: $path } }) {\n      body\n      frontmatter {\n        date(formatString: \"MMMM D, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}